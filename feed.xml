<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aravind Vasudevan | Yet another programmer's blog</title>
    <description>Student · Full Stack Developer · Machine Learning Enthusiast</description>
    <link>https://aravindvasudevan.me//</link>
    <atom:link href="https://aravindvasudevan.me//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 16 Aug 2017 05:55:42 +0530</pubDate>
    <lastBuildDate>Wed, 16 Aug 2017 05:55:42 +0530</lastBuildDate>
    <generator>Jekyll v3.5.1</generator>
    
      <item>
        <title>Moving to Antergos from Ubuntu</title>
        <description>&lt;p&gt;Nine months ago, I decided that I had enough with Windows and planned to 
completely move to GNU/Linux (Yeah, it’s not Linux, it’s GNU/Linux :wink: ). 
Since I own only one laptop, I do not prefer distro jumping and needed to 
settle down with something. After googling for a while, I picked Ubuntu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/close_windows.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ubuntu, with some fixes and theming, is a really awesome distro to dive into. 
Except for the WiFi issue, which is partially fixable, everything seemed nice 
about it. But, being a developer, I tend to stick with latest releases of my 
development tools and Ubuntu’s release cycle wasn’t doing it for me. I tried 
using PPAs but after a while, I started adding more and more PPAs that I started
losing count of. I heard a lot about Arch Linux’s rolling release but was 
too afraid to break my only computer. After getting suggestions from a friend, 
I decided to finally move to Arch Linux. I was too lazy to install it from scratch so 
chose Antergos instead, which provides an awesome UI for installation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/arch_installation.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I installed Antergos on my HP Pavilion 15 ( ab032tx ) with GNOME as Desktop 
Environment 5 days back. Here is a list of issues that I faced and fixes:&lt;/p&gt;

&lt;h3 id=&quot;1-keeps-rebooting-at-boot&quot;&gt;1. Keeps rebooting at boot&lt;/h3&gt;

&lt;p&gt;I completely nuked my hard disk’s content to move to Antergos, only to find that 
I couldn’t boot into the system. I was completely pissed off but was able to fix
it with about half an hour of googling. The issue was that Windows was set as 
hard drive boot in UEFI boot order in BIOS. Changing this to Antergos fixes the 
issue(I never thought Windows could be this fucking annoying even after 
removing it). [ &lt;a href=&quot;https://forum.antergos.com/topic/6192/antergos-keeps-restarting-at-boot-after-fresh-install/7&quot; target=&quot;_blank&quot;&gt;fix&lt;/a&gt; ]&lt;/p&gt;

&lt;h3 id=&quot;2-stuck-with-a-blank-screen-at-boot&quot;&gt;2. Stuck with a blank screen at boot&lt;/h3&gt;

&lt;p&gt;About half an hour of trying to not go crazy, I booted in only to find a 
blinking cursor. After 3 hours of flipping tables, I finally realized that the 
issue was with my Nvidia graphics card. My graphics card supported Nvidia 
Optimus which allowed the OS to use both the discrete and integrated graphics 
card. To make this work, I had to turn off “Install Graphic Drivers” option during
installation and manually install Nvidia drivers with Bumblebee. [ &lt;a href=&quot;https://antergos.com/wiki/it/hardware/bumblebee-for-nvidia-optimus/&quot; target=&quot;_blank&quot;&gt;fix&lt;/a&gt; ]&lt;/p&gt;

&lt;h3 id=&quot;3-wifi-issue&quot;&gt;3. WiFi issue&lt;/h3&gt;

&lt;p&gt;From the day 1 of GNU/Linux, this issue that keeps me reluctant from suggesting it to 
everyone. My laptop came with Realtek RTL8723BE WiFi card which works 
perfectly on Windows, but on GNU/Linux, it is a fucking nightmare. Even though it has partial
fixes, it still has some connecting issues with weak signal and isn’t as fast as
in Windows. [ &lt;a href=&quot;https://iamjagjeetubhi.wordpress.com/2016/06/19/install-realtek-rtl8723be-wifi-drivers-in-arch-linux/&quot; target=&quot;_blank&quot;&gt;fix&lt;/a&gt; ]&lt;/p&gt;

&lt;h3 id=&quot;4-cannot-enable-natural-scrolling-through-gnome-settings&quot;&gt;4. Cannot enable Natural Scrolling through GNOME settings&lt;/h3&gt;

&lt;p&gt;For some reason, enabling Natural Scrolling through GNOME settings didn’t work.
To fix this, I installed Synaptics input driver and manually configured with the
help of Arch Wiki. [ &lt;a href=&quot;https://wiki.archlinux.org/index.php/Touchpad_Synaptics#Natural_scrolling&quot; target=&quot;_blank&quot;&gt;fix&lt;/a&gt; ]&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I also had some minor issues like default browser font not supporting certain 
unicode characters which can be fixed by changing the font and was unable to 
created a new partition by taking space from the root. I tried creating the 
partition using GParted by booting it live but that significantly slowed down 
the OS’s loading time. So I had to reinstall Antergos and partition the drive 
during installation.&lt;/p&gt;

&lt;p&gt;Even though I had a lot of issues at the beginning, I actually feel happy that I 
moved. Arch Wiki is one of the best GNU/Linux guides that I could find over the 
internet. If you couldn’t find something that you want in Arch’s official repo, 
I’m pretty sure that it is available in AUR. AUR is so freaking huge that you 
don’t have to worry about adding PPAs anymore.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/aur_size.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hope this blog helps users who face the same issues as I did. Since I haven’t 
always been a GNU/Linux nerd, I know what issues Windows users face when they to 
move out. I have been already helping out some my friends to move to GNU/Linux and I am
glad to help out more users. If you have any questions or issues, please post 
them in comments. Until then, &lt;code class=&quot;highlighter-rouge&quot;&gt;keep calm &amp;amp;&amp;amp; sudo !!&lt;/code&gt; .&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/zo_uses_arch.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Aug 2017 01:00:00 +0530</pubDate>
        <link>https://aravindvasudevan.me//2017/moving-to-antergos/</link>
        <guid isPermaLink="true">https://aravindvasudevan.me//2017/moving-to-antergos/</guid>
        
        <category>linux</category>
        
        <category>arch</category>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>My day 1 of learning Kotlin</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/blog/kotlin_1.png&quot; alt=&quot;&quot; height=&quot;100px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was reluctant to learn Android until now because of Java. With all the new
languages out there, Java’s verbose nature and lack of syntactic sugar is not the
most pleasing language to code in. Even though language alternatives like Scala,
Clojure, and Kotlin exist for Android, I stuck with hybrid app development due to
the lack of proper documentation for these alternatives.&lt;/p&gt;

&lt;p&gt;A couple of days back, the Android team announced first-class support for kotlin
and I started seeing a lot of Kotlin praise and tutorial coming up across the
internet community. I couldn’t care less about it until I came across these:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gi-no.github.io/kotlin-is-like-typescript/&quot; target=&quot;_blank&quot;&gt;Kotlin is like Typescript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nilhcem.com/swift-is-like-kotlin/&quot; target=&quot;_blank&quot;&gt;Swift is like Kotlin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kotlin to Android is what Swift to iOS is. After seeing how close it is to the
languages I already know, I gave it a shot.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-kotlin&quot;&gt;What is Kotlin?&lt;/h2&gt;

&lt;p&gt;Kotlin is a static-typed programming language that can be compiled to run on
JVM, Javascript, and Native support for MacOS, Linux, and iOS on the way.
Kotlin is a relatively new language and hence unlike Java, it has awesome
features such as lambda expressions, string templates, data classes, nullable
types, getters and setters as property(similar to computed properties in swift),
etc still being completely compatible with Java. Hence, Kotlin can be thrown
into to an existing Java project without making any changes.&lt;/p&gt;

&lt;p&gt;After spending a day with it, here are some notable things about Kotlin that I
learnt:&lt;/p&gt;

&lt;h3 id=&quot;semicolon&quot;&gt;Semicolon&lt;/h3&gt;

&lt;p&gt;Semicolons are optional in Kotlin like in many scripting languages.&lt;/p&gt;

&lt;h3 id=&quot;main&quot;&gt;main()&lt;/h3&gt;

&lt;p&gt;Unlike Java, the main entry function in kotlin is a standalone function in the
package scope.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;program&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;args:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;variable-declaration&quot;&gt;Variable Declaration&lt;/h3&gt;

&lt;p&gt;The variable declaration in Kotlin is done using &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;val&lt;/code&gt; with the type
specified after the variable name with a colon.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;foo:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// cannot be reassigned&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;bar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// can be reassigned&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Kotlin has automatic type inference system and hence we don’t have to specify
the datatype explicitly when it can be inferred.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// The above code can be rewritten as follows&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// cannot be reassigned&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// can be reassigned&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;multiline-string-and-string-templates&quot;&gt;Multiline String and String Templates&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiLineString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
Cras odio felis, pulvinar in eros vitae, pharetra auctor magna.
Pellentesque sit amet nisi vitae lorem scelerisque semper.
&quot;&quot;&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;templateString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;The number is $foo, ${bar}&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;templateString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The number is 10, 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;functions&quot;&gt;Functions&lt;/h3&gt;

&lt;p&gt;Functions in Kotlin are declared using the keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;fun&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;favoriteColor:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$name likes $favoriteColor&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Aravind&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Aravind likes red&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Aravind&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;green&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Aravind likes green&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Aravind&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;favoriteColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;blue&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Aravind likes blue&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Functions with single line can be written with an equal sign in Kotlin.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;favoriteColor:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$name likes $favoriteColor&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// A function can get variable arguments using the `vararg` keyword&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vararg&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;numbers:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Lambda expressions can be created in Kotlin as follows&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;a:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;b:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// the types can be assigned directly to the variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;subtract:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// If the expression has only one argument, `it` can be used as the argument directly.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;negate:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subtract&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;negate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// -1&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// High Order functions can be created in Kotlin as follows&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;twice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;f:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addTwice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;twice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addTwice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;nullable-types&quot;&gt;Nullable types&lt;/h3&gt;
&lt;p&gt;Kotlin’s type system by default does not allow variables to have null value. For
a variable to hold null, it must be explicitly specified as nullable. A variable
can be declared as nullable by appending &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; to its type.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;nullableVar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;foo&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Can be null&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;nonNullableVar:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;bar&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Cannot be null&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;nullableVar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nonNullableVar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// compilation error&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Nullable Variables cannot be used directly&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonNullableVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullableVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// error: variable 'nullableVar' can be null&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The value in the nullable type can be accessed using safe calls&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// When this method is used, the statement returns null if the value is null&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// hence, here the statement's return type is Int?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullableVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The value can also be accessed using Elvis operator&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// When accessed with this operator, if the variable is null, then the value after&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// the operator is returned&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullableVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The third option is `!!` operator. This operator resolves to default Java's&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// behavior where when the variable is null, a NPE is thrown.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullableVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!!.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;classes&quot;&gt;Classes&lt;/h3&gt;
&lt;p&gt;Kotlin classes are declared using the &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; keyword. Kotlin classes can have an
optional primary constructor for which the declaration goes in the header.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Classes with primary constructor.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// The primary constructor is declared in the header itself&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// If the primary constructor does not have any annotations or visibility modifiers, the constructor keyword can be omitted:&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// By default, all Kotlin classes are final and can be made inheritable using the open keyword&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Derived&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The value to the super constructor can be passed from the primary constructor as follows&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Base2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;a:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Derived2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;a:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Objects in Kotlin are created directly without the new keyword like in swift and python&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;data-class&quot;&gt;Data Class&lt;/h3&gt;
&lt;p&gt;Data Classes are special classes in Kotlin that are created to just hold data.
Data classes can be created as following&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;age:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aravind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Aravind&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aravind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// User(name=Aravind, age=20)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Data classes in Kotlin can be initialized into separate variables using&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// destructuring declarations, which is similar to Javascript(ES6)'s&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Destructuring assignment&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aravind&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hi, $name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hi, Aravind&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;singletons&quot;&gt;Singletons&lt;/h3&gt;
&lt;p&gt;Singleton classes can be created in Kotlin using the &lt;code class=&quot;highlighter-rouge&quot;&gt;object&lt;/code&gt; keyword.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Example&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Example&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;conditionals&quot;&gt;Conditionals&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;// Kotlin has no ternary operator(?:) and normal if statement is used as&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// replacement&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Kotlin uses `when` statement instead of switch&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2 or 3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;between 4 to 10&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt; 10&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Since single line functions in Kotlin can be declared with `=` symbol, functions&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// can have `when` as their single statement&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;x:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2 or 3&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;between 4 to 10&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt; 10&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The for statement in Kotlin works similar to python's for statement.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0123456789&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The other constructs such as while, do-while, break and continue are similar&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// to most of the C-based languages.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;collections&quot;&gt;Collections&lt;/h3&gt;
&lt;p&gt;Kotlin does not have dedicated syntax constructs for creating lists or sets.
They are created using methods from its standard library. Moreover, Kotlin
distinguishes between mutable and immutable collections.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// In the below examples, type need not be explicitly set but it is done for understanding&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Lists&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;immutableList:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Created using `listof` function.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;mutableList:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutableListOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Created using `mutableListOf` function.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mutableList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [4, 5, 6, 7]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sets&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;immutableSet:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;mutableSet:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MutableSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutableSetOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [1, 2, 3]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Maps&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;immutableMap:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;mutableMap:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MutableMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutableMapOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;b&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {a=1, b=2, c=3}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mutableMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;immutableMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {a=1, b=2, c=3, d=4}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mutableMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;d&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;smart-casts&quot;&gt;Smart Casts&lt;/h3&gt;
&lt;p&gt;In Kotlin, the type of a variable can be check with &lt;code class=&quot;highlighter-rouge&quot;&gt;is&lt;/code&gt; keyword. The cool
thing about this is that Kotlin tracks these is-checks and casts automatically
when needed.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;x:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// x is automatically cast to String&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// x is automatically cast to Integer&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hi&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// hi&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// The above can be rewritten with when statement&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;x:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Error&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hello&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Error&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;extension-functions&quot;&gt;Extension Functions&lt;/h3&gt;
&lt;p&gt;Kotlin allows extending a class with new functionality without
having to inherit from the class or use any type of design pattern such as
Decorator.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;appendWorld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; World&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this refers to the calling object&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;appendWorld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Hello World&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;kotlin-on-android&quot;&gt;Kotlin on Android&lt;/h2&gt;
&lt;p&gt;Since Kotlin is now a first-class language for Android, from Android Studio 3.0,
new projects can be generated with Kotlin as language and existing java files can
be transpiled to Kotlin easily.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/kotlin_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kotlin provides a special extension library for Android called as &lt;code class=&quot;highlighter-rouge&quot;&gt;kotlin-android-extensions&lt;/code&gt;.
This extension provides synthetic properties to Android.&lt;/p&gt;

&lt;p&gt;Using this extension, views with id in the Android layout can be directly accessed
using the id as a variable without using &lt;code class=&quot;highlighter-rouge&quot;&gt;findViewById()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Secondly, this extension collapses getters and setters in the standard library
into properties. So, for example, to read or write text from a view, the &lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;
property can be used instead of using getText() and setText(). The beautiful thing
about this is that it is still possible to use the getters and setters, and when
we use those, the IDE suggests to use the synthetic property’s attribute.&lt;/p&gt;

&lt;p&gt;kotlin-android-extensions can be added as a plugin to the build.gradle file:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;plugin: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'kotlin-android-extensions'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The ids in the layout can be imported as synthetic properties as follows:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;kotlinx.android.synthetic.main.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For eg, if the layout has a text view with id &lt;code class=&quot;highlighter-rouge&quot;&gt;display&lt;/code&gt;, it can be accessed as
follows:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// same as ((TextView) findViewById(R.id.display)).setText(&quot;Hello world!&quot;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Below is the link to a simple calculator program that uses kotlin-android-extensions:
&lt;a href=&quot;https://github.com/AravindVasudev/Kalculator&quot; target=&quot;_blank&quot;&gt;https://github.com/AravindVasudev/Kalculator&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;important-links&quot;&gt;Important Links&lt;/h2&gt;
&lt;p&gt;Here are some links that helped me get through my day 1 of Kotlin:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Installation
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://developer.android.com/studio/preview/index.html&quot; target=&quot;_blank&quot;&gt;Android Studio Canary 1&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://kotlinlang.org/docs/tutorials/command-line.html&quot; target=&quot;_blank&quot;&gt;Kotlin Command Line Installation&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Comparisons with
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://kotlinlang.org/docs/reference/comparison-to-java.html&quot; target=&quot;_blank&quot;&gt;Java&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://nilhcem.com/swift-is-like-kotlin/&quot; target=&quot;_blank&quot;&gt;Swift&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://ragunathjawahar.wordpress.com/2015/03/18/my-first-ios-app-while-learning-kotlin-for-android/&quot; target=&quot;_blank&quot;&gt;Swift&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://gi-no.github.io/kotlin-is-like-typescript/&quot; target=&quot;_blank&quot;&gt;Typescript&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Tutorials
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=X1RVYt2QKQE&quot; target=&quot;_blank&quot;&gt;Google IO ‘17&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://learnxinyminutes.com/docs/kotlin/&quot; target=&quot;_blank&quot;&gt;learnxinyminutes.com&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://hackernoon.com/my-first-experiences-with-kotlin-b3fcf5e111f7&quot; target=&quot;_blank&quot;&gt;hackernoon.com&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://kotlinlang.org/docs/reference/&quot; target=&quot;_blank&quot;&gt;kotlinlang.org&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kotlin Android extensions
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://kotlinlang.org/docs/tutorials/android-plugin.html&quot; target=&quot;_blank&quot;&gt;kotlinlang.org&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://ragunathjawahar.wordpress.com/2015/03/23/kotlin-findviewbyid-dead-as-dinosaurs/&quot; target=&quot;_blank&quot;&gt;ragunathjawahar.wordpress.com&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kotlin Android examples
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/AravindVasudev/Kalculator&quot; target=&quot;_blank&quot;&gt;Calculator&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://developer.android.com/samples/index.html?language=kotlin&quot; target=&quot;_blank&quot;&gt;developer.android.com&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Kotlin on Web
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2017/01/04/introducing-kotlin-support-in-spring-framework-5-0&quot; target=&quot;_blank&quot;&gt;Spring support&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;Frontend
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://dzone.com/articles/kotlin-for-front-end-developers&quot; target=&quot;_blank&quot;&gt;dzone.com&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://kotlinlang.org/docs/tutorials/javascript/working-with-javascript.html&quot; target=&quot;_blank&quot;&gt;kotlinlang.org&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.jetbrains.com/kotlin/2017/04/kotlinnative-tech-preview-kotlin-without-a-vm/&quot; target=&quot;_blank&quot;&gt;Kotlin Native&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://android-developers.googleblog.com/2017/05/android-announces-support-for-kotlin.html&quot; target=&quot;_blank&quot;&gt;Google Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 21 May 2017 05:00:00 +0530</pubDate>
        <link>https://aravindvasudevan.me//2017/my-day-1-with-kotlin/</link>
        <guid isPermaLink="true">https://aravindvasudevan.me//2017/my-day-1-with-kotlin/</guid>
        
        <category>kotlin</category>
        
        
        <category>programming</category>
        
        <category>android</category>
        
        <category>kotlin</category>
        
      </item>
    
      <item>
        <title>Web Scraping 101 (part 2): Build an Anna University Result Scraper</title>
        <description>&lt;p&gt;This is the follow-up to &lt;a href=&quot;../web-scraping-101/&quot;&gt;Web Scraping 101: Build a simple web scraper using PHP&lt;/a&gt;.
If you haven’t seen it yet, I’d highly recommend you to read that before continuing.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will be building a simple web scraper that extracts the
result from Anna University’s website. This tutorial is strictly for educational
purposes.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;au-scraper&quot;&gt;AU Scraper&lt;/h2&gt;

&lt;p&gt;We are going to do this in 4 simple steps:&lt;/p&gt;

&lt;h3 id=&quot;step-1-read-the-website-and-create-the-dom&quot;&gt;Step 1: read the website and create the DOM&lt;/h3&gt;

&lt;p&gt;Anna University provides a nice little endpoint using which we can view our result
by sending a GET Request.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:/&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;aucoe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;annauniv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;edu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cgi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pl?&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;register_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you have gone through the &lt;a href=&quot;../web-scraping-101/&quot;&gt;previous post&lt;/a&gt;, the below needs no explanation.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/807a9860088f1be5489d07b57c18344a.js?file=AUScraper_1.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;Going through the source of the site, we can see that structure of the site is
pretty messed up. If you have tried running the above code, you’d have noticed that
it throws many errors at &lt;code class=&quot;highlighter-rouge&quot;&gt;loadHTML()&lt;/code&gt; line. This is because libxml library used by
PHP throws an error when the HTML it receives is not structured properly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/auscraper_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To get over this, we use &lt;a href=&quot;http://php.net/manual/en/function.libxml-use-internal-errors.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;libxml_use_internal_errors()&lt;/code&gt;&lt;/a&gt; function which stops the libxml from throwing errors to the standard error.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/807a9860088f1be5489d07b57c18344a.js?file=AUScraper_2.php&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;step-2-extract-the-data&quot;&gt;Step 2: Extract the data&lt;/h3&gt;

&lt;p&gt;As we have seen already, the structure of the site is pretty messed up. So, we
need to find a pattern to extract the relevant data. Going through the site once
more, we can see that all the fields we need are enclosed within a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tag
with &lt;code class=&quot;highlighter-rouge&quot;&gt;bgcolor=&quot;#fffaea&quot;&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;To extract an element using its attribute, we can use &lt;a href=&quot;http://php.net/manual/en/domxpath.query.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt;&lt;/a&gt;
method of &lt;a href=&quot;http://php.net/manual/en/class.domxpath.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DOMXPath&lt;/code&gt;&lt;/a&gt; class. &lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt;
method takes in a XPath(XPath is a query language for selecting nodes from an XML document.)
and returns a &lt;a href=&quot;http://php.net/manual/en/class.domnodelist.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DOMNodeList&lt;/code&gt;&lt;/a&gt; similar
to &lt;code class=&quot;highlighter-rouge&quot;&gt;getElementsByTagName&lt;/code&gt; in previous post.&lt;/p&gt;

&lt;p&gt;The XPath query we will be using is&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@bgcolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#fffaea&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above XPath query is broken down below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Expression&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;//&lt;/td&gt;
      &lt;td&gt;makes the selection throughout the document.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;td&lt;/td&gt;
      &lt;td&gt;selects all the &lt;code class=&quot;highlighter-rouge&quot;&gt;td&lt;/code&gt; nodes.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;@&lt;/td&gt;
      &lt;td&gt;Selects attributes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;td[@bgcolor=”#fffaea”]&lt;/td&gt;
      &lt;td&gt;Selects all &lt;code class=&quot;highlighter-rouge&quot;&gt;td&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;bgcolor=&quot;#fffaea&quot;&lt;/code&gt; attribute&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;First, we have to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;DOMXPath&lt;/code&gt; object. &lt;code class=&quot;highlighter-rouge&quot;&gt;DOMXPath's&lt;/code&gt; constructor takes in
&lt;code class=&quot;highlighter-rouge&quot;&gt;DOMDocument&lt;/code&gt; object. Then, we have to call the &lt;code class=&quot;highlighter-rouge&quot;&gt;query&lt;/code&gt; method with the above
XPath query.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/807a9860088f1be5489d07b57c18344a.js?file=AUScraper_3.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;In the above code, data inside each selected node is stored into an array.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/auscraper_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-3-clean-the-data&quot;&gt;Step 3: Clean the data&lt;/h3&gt;

&lt;p&gt;Not all the data that we have retrieved is useful to us. Before we proceed to
generate excel, let us first sanitize the data a little more.&lt;/p&gt;

&lt;p&gt;From the above code’s result, we can clearly see that, from &lt;code class=&quot;highlighter-rouge&quot;&gt;$extracted[6]&lt;/code&gt; to the
end of the array, every &lt;code class=&quot;highlighter-rouge&quot;&gt;3Nth element&lt;/code&gt; is the subject code and &lt;code class=&quot;highlighter-rouge&quot;&gt;3N + 1th element&lt;/code&gt;
is the grade.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/807a9860088f1be5489d07b57c18344a.js?file=AUScraper_4.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/auscraper_3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-4-store-it-to-excel&quot;&gt;Step 4: Store it to Excel&lt;/h3&gt;

&lt;p&gt;There are various external libraries to do this, but for simplicity, we are doing
this with raw PHP.&lt;/p&gt;

&lt;p&gt;To generate an excel file, first we need to include some headers.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-Type: application/vnd.ms-excel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-disposition: attachment; filename=result.xls&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Pragma: no-cache&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Expires: 0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The explanation below can be skipped:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Header&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-Type: application/vnd.ms-excel&lt;/td&gt;
      &lt;td&gt;Sets the MIME Type for Excel&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content-disposition: attachment; filename=result.xls&lt;/td&gt;
      &lt;td&gt;Sets the file as downloadable with the name &lt;code class=&quot;highlighter-rouge&quot;&gt;result.xls&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pragma: no-cache&lt;/td&gt;
      &lt;td&gt;When the no-cache directive is present in a request message, an application SHOULD forward the request toward the origin server even if it has a cached copy of what is being requested.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Expires: 0&lt;/td&gt;
      &lt;td&gt;The Expires header contains the date/time after which the response is considered stale. Invalid dates, like the value 0, represent a date in the past and mean that the resource is already expired.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now, anything to the standard output will be stored as &lt;code class=&quot;highlighter-rouge&quot;&gt;.xls&lt;/code&gt;. Each cell value
in a row is separated using tabs &lt;code class=&quot;highlighter-rouge&quot;&gt;\t&lt;/code&gt; and each row is separated using line breaks &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;example:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Phone'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Joey Tribbiani'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'12345678'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;will output:
&lt;img src=&quot;/images/blog/auscraper_4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, storing &lt;code class=&quot;highlighter-rouge&quot;&gt;$result&lt;/code&gt; to Excel:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/807a9860088f1be5489d07b57c18344a.js?file=AUScraper_5.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;will output:
&lt;img src=&quot;/images/blog/auscraper_5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it, folks! We have successfully generated an Excel file with the scraped
result. If you have any problem following the tutorial, please do post it in the
comments below.&lt;/p&gt;

&lt;p&gt;GITHUB link to the completed project: &lt;a href=&quot;https://github.com/AravindVasudev/AUScraper&quot;&gt;GITHUB&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Jan 2017 02:51:00 +0530</pubDate>
        <link>https://aravindvasudevan.me//2017/web-scraping-101-part2/</link>
        <guid isPermaLink="true">https://aravindvasudevan.me//2017/web-scraping-101-part2/</guid>
        
        <category>php</category>
        
        <category>web scraping</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Web Scraping 101 : Build a simple web scraper using PHP</title>
        <description>&lt;p&gt;There are times when we want to extract data from a website. In most cases,
you are provided with an API, but that’s not always plausible. So, when a website
does not provide an API, the only way to get the data from the website is to scrape it off yourself.&lt;/p&gt;

&lt;p&gt;In this tutorial, we are going to build a simple scraper using PHP to extract data from Wikipedia
(I’d highly recommend you to use &lt;a href=&quot;https://www.mediawiki.org/wiki/API:Main_page&quot;&gt;Wikipedia API&lt;/a&gt; over this.
This is just for the tutorial purpose.) and another scraper that extracts
Anna University result.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/web_scraping.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are various external libraries such as Simple HTML DOM and cURL,
which I highly recommend you to check out after this tutorial, but we are going to
proceed with simple raw PHP.&lt;/p&gt;

&lt;p&gt;Before you proceed, remember that Web Scraping is definitely a gray area. So,
make sure you are not breaking terms and conditions of the site you are scraping
the data off. This tutorial is just for educational purpose.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;simple-wikipedia-scraper&quot;&gt;Simple Wikipedia Scraper&lt;/h2&gt;

&lt;p&gt;We are going to do this in 3 simple steps:&lt;/p&gt;

&lt;h3 id=&quot;step-1-get-the-content&quot;&gt;Step 1: Get the content&lt;/h3&gt;

&lt;p&gt;First, we have to pull the content off the Wikipedia page. For this, we use &lt;a href=&quot;http://php.net/manual/en/function.file-get-contents.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;file_get_contents()&lt;/code&gt;&lt;/a&gt;
function, which is used to retrieve the content of a file using its URL. It takes in
a URL of a file and returns its content.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/b6265f6eb40a1e8979188b6967e7cfb1.js?file=print_url.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;The above code returns the content of the Wikipedia page as a string which
the browser interprets as something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/wikiscraper_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-2-parse-the-string-as-dom&quot;&gt;Step 2: Parse the string as DOM&lt;/h3&gt;

&lt;p&gt;DOM stands for &lt;a href=&quot;https://www.w3.org/TR/1998/WD-DOM-19980720/introduction.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Document Object Model&lt;/code&gt;&lt;/a&gt;.
It defines the logical structure of documents and the way a document is accessed
and manipulated. In simple words, it generates a tree like structure to access the
data in it. It is used by the browser to parse HTML into displayable content.
&lt;img src=&quot;/images/blog/dom.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$url&lt;/code&gt; can be converted to DOM using &lt;a href=&quot;http://php.net/manual/en/class.domdocument.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DOMDocument&lt;/code&gt;&lt;/a&gt;
class in PHP.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DOMDocument's&lt;/code&gt; constructor takes in &lt;code class=&quot;highlighter-rouge&quot;&gt;XML version&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;encoding&lt;/code&gt; as parameters.
Don’t worry if you don’t know what they are, just use the line below:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vg&quot;&gt;$dom&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DOMDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'UTF-8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;http://php.net/manual/en/domdocument.loadhtml.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;loadHTML()&lt;/code&gt;&lt;/a&gt; method of
DOMDocument takes in the content and creates a DOM.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/b6265f6eb40a1e8979188b6967e7cfb1.js?file=construct_dom.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;Note: If you’re new to PHP classes, they are very similar to the ones in C++ and Java.
The only difference you have to know to continue this tutorial is that PHP uses
&lt;code class=&quot;highlighter-rouge&quot;&gt;-&amp;gt;&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; to access class members.&lt;/p&gt;

&lt;h3 id=&quot;step-3-scrape-the-data&quot;&gt;Step 3: Scrape the data&lt;/h3&gt;

&lt;p&gt;This is the part where you have to use your brain. Since every website is not built
the same way, you have to know your way through the website’s structure. To do this,
just try going through the website’s source to determine the appropriate &lt;code class=&quot;highlighter-rouge&quot;&gt;selectors&lt;/code&gt;
to crack into the data.&lt;/p&gt;

&lt;p&gt;For example,
if you go through &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_scraping&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://en.wikipedia.org/wiki/Web_scraping&lt;/code&gt;&lt;/a&gt; ‘s
source, you can see that the title has an ID of &lt;code class=&quot;highlighter-rouge&quot;&gt;#firstHeading&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/wikiscraper_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can retrieve a DOM Element with its ID using &lt;a href=&quot;http://php.net/manual/en/domdocument.getelementbyid.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getElementById&lt;/code&gt;&lt;/a&gt; method. &lt;code class=&quot;highlighter-rouge&quot;&gt;getElementById()&lt;/code&gt; method returns an object of &lt;a href=&quot;http://php.net/manual/en/class.domelement.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DOMElement&lt;/code&gt;&lt;/a&gt; type.&lt;/p&gt;

&lt;p&gt;The content inside a &lt;code class=&quot;highlighter-rouge&quot;&gt;DOMElement&lt;/code&gt; is stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;nodeValue&lt;/code&gt; attribute.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/b6265f6eb40a1e8979188b6967e7cfb1.js?file=print_title.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/wikiscraper_3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, We’re going to extract the first paragraph of the Wikipedia page. Going
through the source again, we can see that the first paragraph is within a &lt;code class=&quot;highlighter-rouge&quot;&gt;p tag&lt;/code&gt;
inside &lt;code class=&quot;highlighter-rouge&quot;&gt;#mw-content-text&lt;/code&gt;.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/b6265f6eb40a1e8979188b6967e7cfb1.js?file=print_para.php&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;http://php.net/manual/en/domelement.getelementsbytagname.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getElementsByTagName&lt;/code&gt;&lt;/a&gt;
rerurns a &lt;a href=&quot;http://php.net/manual/en/class.domnodelist.php&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DOMNodeList&lt;/code&gt;&lt;/a&gt; object,
which is a collection of &lt;code class=&quot;highlighter-rouge&quot;&gt;DOMElement&lt;/code&gt; objects ordered, which can be accessed using
&lt;code class=&quot;highlighter-rouge&quot;&gt;item()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;In the example, the first paragraph is returned by &lt;code class=&quot;highlighter-rouge&quot;&gt;item(0)&lt;/code&gt;. Like how we did in
the title, we extract the text using &lt;code class=&quot;highlighter-rouge&quot;&gt;nodeValue&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/wikiscraper_4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it! We have successfully scraped data off the Wikipedia page.&lt;/p&gt;

&lt;p&gt;Try going through the documentation to get a clearer picture. If you find the
documentation difficult, I’d recommend you to go with some library. If you have
any problem following the tutorial, please do post it in the comments below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/blog/read_the_docs.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;../web-scraping-101-part2/&quot;&gt;part 2&lt;/a&gt; of this tutorial continues on a real world example of scraping
the Anna University website for result into an excel file. If you liked this, please do check
this out: &lt;a href=&quot;../web-scraping-101-part2/&quot;&gt;Web Scraping 101: Anna University Result Scraper&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 13 Jan 2017 12:48:00 +0530</pubDate>
        <link>https://aravindvasudevan.me//2017/web-scraping-101/</link>
        <guid isPermaLink="true">https://aravindvasudevan.me//2017/web-scraping-101/</guid>
        
        <category>php</category>
        
        <category>web scraping</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>How to create a context menu using JQuery in 3 steps !</title>
        <description>&lt;p&gt;Say Google Drive or WhatsApp web or any other web application with native feel,
they all have one thing in common: A Context Menu. A while ago, when I wanted to
add one to my web app, like any other programmer, I binged it (:joy:). Jokes Apart,
to my surprise, I couldn’t find a single proper tutorial to do that.&lt;/p&gt;

&lt;p&gt;After spending a long time searching, I found a couple of StackOverflow answers
which were in pure JS and CSS (:confounded:). Hence I created this tutorial explaining
how I did it.&lt;/p&gt;

&lt;p&gt;Here’s my method of doing this using JQuery &amp;amp; Bootstrap (Basic knowledge of HTML,
  CSS and JS is enough for this tutorial)&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;step-1-include-jquery-and-bootstrap&quot;&gt;Step 1: Include JQuery and Bootstrap&lt;/h3&gt;

&lt;p&gt;Copy the below lines to the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/57ea11305141188c1af1c53969bbc976.js?file=include-dependencies.html&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;step-2-create-a-bootstrap-dropdown-menu&quot;&gt;Step 2: Create a Bootstrap Dropdown Menu&lt;/h3&gt;

&lt;p&gt;Dropdown Menu in Bootstrap is created by making the class of a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; element &lt;code class=&quot;highlighter-rouge&quot;&gt;.dropdown-menu&lt;/code&gt;&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/57ea11305141188c1af1c53969bbc976.js?file=contextmenu.html&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.context-menu&lt;/code&gt; class is created by us using which we’ll add style and script.&lt;/p&gt;

&lt;h3 id=&quot;step-3-add-jquery-contextmenu-event&quot;&gt;Step 3: Add JQuery contextmenu event&lt;/h3&gt;

&lt;p&gt;Add the contextmenu event to any block element. If you want this to work throughout the page,
add the event handler to the html and body.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/AravindVasudev/57ea11305141188c1af1c53969bbc976.js?file=contextmenu.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;thats-it&quot;&gt;That’s it!&lt;/h3&gt;

&lt;p&gt;Here’s the complete solution:
&lt;script src=&quot;https://gist.github.com/AravindVasudev/57ea11305141188c1af1c53969bbc976.js?file=index.html&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Finally, style the &lt;code class=&quot;highlighter-rouge&quot;&gt;.context-menu&lt;/code&gt; to match your site’s theme.&lt;/p&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;

&lt;p data-height=&quot;362&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;JbZJjL&quot; data-default-tab=&quot;result&quot; data-user=&quot;AravindVasudev&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;ContextMenu&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/AravindVasudev/pen/JbZJjL/&quot;&gt;ContextMenu&lt;/a&gt; by Aravind (&lt;a href=&quot;http://codepen.io/AravindVasudev&quot;&gt;@AravindVasudev&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Thu, 08 Dec 2016 14:30:00 +0530</pubDate>
        <link>https://aravindvasudevan.me//2016/How-to-create-a-context-menu/</link>
        <guid isPermaLink="true">https://aravindvasudevan.me//2016/How-to-create-a-context-menu/</guid>
        
        <category>web</category>
        
        <category>tricks</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Hello World</title>
        <description>&lt;p&gt;This is my first blog. Here’s a line of python to generate an asterisk triangle:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]))&lt;/span&gt;
 &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

 &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;***&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;****&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;*****&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 08 Dec 2016 13:50:00 +0530</pubDate>
        <link>https://aravindvasudevan.me//2016/hello-world/</link>
        <guid isPermaLink="true">https://aravindvasudevan.me//2016/hello-world/</guid>
        
        <category>python</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
