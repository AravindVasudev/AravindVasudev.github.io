<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>data structures on Blog</title><link>/tags/data-structures/</link><description>Recent content in data structures on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 11 Feb 2024 00:00:00 +0530</lastBuildDate><atom:link href="/tags/data-structures/index.xml" rel="self" type="application/rss+xml"/><item><title>Recursion, Graphs, and Dynamic Programming</title><link>/2024/recursion-graphs-and-dp/</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0530</pubDate><guid>/2024/recursion-graphs-and-dp/</guid><description>This write-up aims to connect graph theory with solving dynamic programming problems. Instead of delving into the basics of these concepts, we will be focusing on building an intuition for using these concepts. We will start by exploring the idea behind recursion, followed by graphs, and finally wrapping up with top-down dynamic programming.
Recursion Recursion is defining a problem in terms of itself.
What does this even mean? We all would have seen the classic example of generating the Nth fibonacci sequence using recursion:</description></item></channel></rss>